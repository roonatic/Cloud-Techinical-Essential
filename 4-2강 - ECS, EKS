<4-2강 - ECS, EKS>
[개요]
ECS(Elastic Container Service)
- 컨테이너 오케스트레이션 서비스
- 여러 애플리케이션을 관리

* Cluster
   : 컨테이너를 실행할 수 있는 논리적 공간

* Task definition
 : Docker 컨테이너를 생성할 때, 어떤 설정으로 생성할 것인지에 대한 Set

 * Task
  : Tesk definition에서 설정된 대로 배포된 컨테이너 Set

EKS(Elastic Kubernetes Service)
 : AWS에서 Kubernetes를 운영, 설치, 제공해주는 서비스

 * Cluster
   : Master Node와 Worker Node 머신들의 Set

 * Pod
  - Container을 배포할 오브젝트
  - Kubernetes의 가장 작은 배포 단위 오브젝트
  - yaml 파일로 관리

 * Deployment
  : Pod를 더 세밀히 관리해주는 컨트롤러
  - Pod가 문제가 생겨 삭제되었을 경우, 재배포를 해주며 버전 업데이트, 롤백 등 수행

 * Kubectl
  - Kubernetes에 명령을 전달하는 CLI
  - 명령 구조: Kubectl [COMMAND] [TYPE] [NAME] [FLAGS]
  - Kubernetes 리소스를 생성, 수정, 삭제, 조회

  [EKS 와 Kubernetes 비교]
                                EKS                     Kubernetes
    배포환경                    AWS                     온프레미스, 베어메탈, 클라우드
    마스터 노드                 AWS에서 설치 및 관리     직접 설치 및 관리
    HA 구성                     자동 구성               직접 구성
    인증                        AWS IAM 기반            직접 구성
    Pod 네트워크 통신 방식       AWS VPC 기반    다양한 플러그인 지원
    Pod 개수 제한               워커 노드의 인스턴스 타입에 따라 제한   워커 노드의 리소스에 따라 제한

[EKS 와 ECS 비교]
                            EKS                                             ECS 
    오픈소스                O                                                X
    컨테이너                Pod                                              Task
    배포 난이도             중간(AWS와 Kubernetes 지식 필요)                  쉬움(AWS 대시보드 사용)
    규모                    대규모, 하이브리드 배포 / 엔터프라이즈 급          소규모
    커뮤니티                대규모 커뮤니티 보유(오픈소스)                     AWS 독점 서비스라서 기업지원은 좋을 수 있으나 커뮤니티는 지원이 적음